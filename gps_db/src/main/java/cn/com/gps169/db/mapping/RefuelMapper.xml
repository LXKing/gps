<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.com.gps169.db.dao.RefuelMapper">
  <resultMap id="BaseResultMap" type="cn.com.gps169.db.model.Refuel">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <id column="refuel_id" jdbcType="INTEGER" property="refuelId" />
    <result column="vehicle_id" jdbcType="INTEGER" property="vehicleId" />
    <result column="refuel_amount" jdbcType="DECIMAL" property="refuelAmount" />
    <result column="fuel_amount" jdbcType="DECIMAL" property="fuelAmount" />
    <result column="mileage" jdbcType="DECIMAL" property="mileage" />
    <result column="refuel_date" jdbcType="TIMESTAMP" property="refuelDate" />
    <result column="location" jdbcType="VARCHAR" property="location" />
    <result column="created" jdbcType="TIMESTAMP" property="created" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    refuel_id, vehicle_id, refuel_amount, fuel_amount, mileage, refuel_date, location, 
    created
  </sql>
  <select id="selectByExample" parameterType="cn.com.gps169.db.model.RefuelExample" resultMap="BaseResultMap">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select
    <if test="distinct">
      distinct
    </if>
    'true' as QUERYID,
    <include refid="Base_Column_List" />
    from gps_refuel
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
    <if test="limitStart != null and limitStart&gt;-1">
      limit ${limitStart} , ${limitEnd}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select 
    <include refid="Base_Column_List" />
    from gps_refuel
    where refuel_id = #{refuelId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    delete from gps_refuel
    where refuel_id = #{refuelId,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="cn.com.gps169.db.model.RefuelExample">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    delete from gps_refuel
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="cn.com.gps169.db.model.Refuel">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    insert into gps_refuel (refuel_id, vehicle_id, refuel_amount, 
      fuel_amount, mileage, refuel_date, 
      location, created)
    values (#{refuelId,jdbcType=INTEGER}, #{vehicleId,jdbcType=INTEGER}, #{refuelAmount,jdbcType=DECIMAL}, 
      #{fuelAmount,jdbcType=DECIMAL}, #{mileage,jdbcType=DECIMAL}, #{refuelDate,jdbcType=TIMESTAMP}, 
      #{location,jdbcType=VARCHAR}, #{created,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="cn.com.gps169.db.model.Refuel">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    insert into gps_refuel
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="refuelId != null">
        refuel_id,
      </if>
      <if test="vehicleId != null">
        vehicle_id,
      </if>
      <if test="refuelAmount != null">
        refuel_amount,
      </if>
      <if test="fuelAmount != null">
        fuel_amount,
      </if>
      <if test="mileage != null">
        mileage,
      </if>
      <if test="refuelDate != null">
        refuel_date,
      </if>
      <if test="location != null">
        location,
      </if>
      <if test="created != null">
        created,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="refuelId != null">
        #{refuelId,jdbcType=INTEGER},
      </if>
      <if test="vehicleId != null">
        #{vehicleId,jdbcType=INTEGER},
      </if>
      <if test="refuelAmount != null">
        #{refuelAmount,jdbcType=DECIMAL},
      </if>
      <if test="fuelAmount != null">
        #{fuelAmount,jdbcType=DECIMAL},
      </if>
      <if test="mileage != null">
        #{mileage,jdbcType=DECIMAL},
      </if>
      <if test="refuelDate != null">
        #{refuelDate,jdbcType=TIMESTAMP},
      </if>
      <if test="location != null">
        #{location,jdbcType=VARCHAR},
      </if>
      <if test="created != null">
        #{created,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="cn.com.gps169.db.model.RefuelExample" resultType="java.lang.Integer">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select count(*) from gps_refuel
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update gps_refuel
    <set>
      <if test="record.refuelId != null">
        refuel_id = #{record.refuelId,jdbcType=INTEGER},
      </if>
      <if test="record.vehicleId != null">
        vehicle_id = #{record.vehicleId,jdbcType=INTEGER},
      </if>
      <if test="record.refuelAmount != null">
        refuel_amount = #{record.refuelAmount,jdbcType=DECIMAL},
      </if>
      <if test="record.fuelAmount != null">
        fuel_amount = #{record.fuelAmount,jdbcType=DECIMAL},
      </if>
      <if test="record.mileage != null">
        mileage = #{record.mileage,jdbcType=DECIMAL},
      </if>
      <if test="record.refuelDate != null">
        refuel_date = #{record.refuelDate,jdbcType=TIMESTAMP},
      </if>
      <if test="record.location != null">
        location = #{record.location,jdbcType=VARCHAR},
      </if>
      <if test="record.created != null">
        created = #{record.created,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update gps_refuel
    set refuel_id = #{record.refuelId,jdbcType=INTEGER},
      vehicle_id = #{record.vehicleId,jdbcType=INTEGER},
      refuel_amount = #{record.refuelAmount,jdbcType=DECIMAL},
      fuel_amount = #{record.fuelAmount,jdbcType=DECIMAL},
      mileage = #{record.mileage,jdbcType=DECIMAL},
      refuel_date = #{record.refuelDate,jdbcType=TIMESTAMP},
      location = #{record.location,jdbcType=VARCHAR},
      created = #{record.created,jdbcType=TIMESTAMP}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="cn.com.gps169.db.model.Refuel">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update gps_refuel
    <set>
      <if test="vehicleId != null">
        vehicle_id = #{vehicleId,jdbcType=INTEGER},
      </if>
      <if test="refuelAmount != null">
        refuel_amount = #{refuelAmount,jdbcType=DECIMAL},
      </if>
      <if test="fuelAmount != null">
        fuel_amount = #{fuelAmount,jdbcType=DECIMAL},
      </if>
      <if test="mileage != null">
        mileage = #{mileage,jdbcType=DECIMAL},
      </if>
      <if test="refuelDate != null">
        refuel_date = #{refuelDate,jdbcType=TIMESTAMP},
      </if>
      <if test="location != null">
        location = #{location,jdbcType=VARCHAR},
      </if>
      <if test="created != null">
        created = #{created,jdbcType=TIMESTAMP},
      </if>
    </set>
    where refuel_id = #{refuelId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="cn.com.gps169.db.model.Refuel">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update gps_refuel
    set vehicle_id = #{vehicleId,jdbcType=INTEGER},
      refuel_amount = #{refuelAmount,jdbcType=DECIMAL},
      fuel_amount = #{fuelAmount,jdbcType=DECIMAL},
      mileage = #{mileage,jdbcType=DECIMAL},
      refuel_date = #{refuelDate,jdbcType=TIMESTAMP},
      location = #{location,jdbcType=VARCHAR},
      created = #{created,jdbcType=TIMESTAMP}
    where refuel_id = #{refuelId,jdbcType=INTEGER}
  </update>
  <resultMap id="ResultMapRefuel" type="cn.com.gps169.db.model.Refuel">
    <id column="refuel_id" jdbcType="INTEGER" property="refuelId" />
    <result column="vehicle_id" jdbcType="INTEGER" property="vehicleId" />
    <result column="refuel_amount" jdbcType="DECIMAL" property="refuelAmount" />
    <result column="fuel_amount" jdbcType="DECIMAL" property="fuelAmount" />
    <result column="mileage" jdbcType="DECIMAL" property="mileage" />
    <result column="refuel_date" jdbcType="TIMESTAMP" property="refuelDate" />
    <result column="location" jdbcType="VARCHAR" property="location" />
    <result column="created" jdbcType="TIMESTAMP" property="created" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    refuel_id, vehicle_id, refuel_amount, fuel_amount, mileage, refuel_date, location, 
    created
  </sql>
  <select id="selectByExample" parameterType="cn.com.gps169.db.model.RefuelExample" resultMap="ResultMapRefuel">
    select
    <if test="distinct">
      distinct
    </if>
    'true' as QUERYID,
    <include refid="Base_Column_List" />
    from gps_refuel
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="ResultMapRefuel">
    select 
    <include refid="Base_Column_List" />
    from gps_refuel
    where refuel_id = #{refuelId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from gps_refuel
    where refuel_id = #{refuelId,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="cn.com.gps169.db.model.RefuelExample">
    delete from gps_refuel
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insertSelective" parameterType="cn.com.gps169.db.model.Refuel">
    insert into gps_refuel
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="refuelId != null">
        refuel_id,
      </if>
      <if test="vehicleId != null">
        vehicle_id,
      </if>
      <if test="refuelAmount != null">
        refuel_amount,
      </if>
      <if test="fuelAmount != null">
        fuel_amount,
      </if>
      <if test="mileage != null">
        mileage,
      </if>
      <if test="refuelDate != null">
        refuel_date,
      </if>
      <if test="location != null">
        location,
      </if>
      <if test="created != null">
        created,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="refuelId != null">
        #{refuelId,jdbcType=INTEGER},
      </if>
      <if test="vehicleId != null">
        #{vehicleId,jdbcType=INTEGER},
      </if>
      <if test="refuelAmount != null">
        #{refuelAmount,jdbcType=DECIMAL},
      </if>
      <if test="fuelAmount != null">
        #{fuelAmount,jdbcType=DECIMAL},
      </if>
      <if test="mileage != null">
        #{mileage,jdbcType=DECIMAL},
      </if>
      <if test="refuelDate != null">
        #{refuelDate,jdbcType=TIMESTAMP},
      </if>
      <if test="location != null">
        #{location,jdbcType=VARCHAR},
      </if>
      <if test="created != null">
        #{created,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="cn.com.gps169.db.model.RefuelExample" resultType="java.lang.Integer">
    select count(*) from gps_refuel
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update gps_refuel
    <set>
      <if test="record.refuelId != null">
        refuel_id = #{record.refuelId,jdbcType=INTEGER},
      </if>
      <if test="record.vehicleId != null">
        vehicle_id = #{record.vehicleId,jdbcType=INTEGER},
      </if>
      <if test="record.refuelAmount != null">
        refuel_amount = #{record.refuelAmount,jdbcType=DECIMAL},
      </if>
      <if test="record.fuelAmount != null">
        fuel_amount = #{record.fuelAmount,jdbcType=DECIMAL},
      </if>
      <if test="record.mileage != null">
        mileage = #{record.mileage,jdbcType=DECIMAL},
      </if>
      <if test="record.refuelDate != null">
        refuel_date = #{record.refuelDate,jdbcType=TIMESTAMP},
      </if>
      <if test="record.location != null">
        location = #{record.location,jdbcType=VARCHAR},
      </if>
      <if test="record.created != null">
        created = #{record.created,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update gps_refuel
    set refuel_id = #{record.refuelId,jdbcType=INTEGER},
      vehicle_id = #{record.vehicleId,jdbcType=INTEGER},
      refuel_amount = #{record.refuelAmount,jdbcType=DECIMAL},
      fuel_amount = #{record.fuelAmount,jdbcType=DECIMAL},
      mileage = #{record.mileage,jdbcType=DECIMAL},
      refuel_date = #{record.refuelDate,jdbcType=TIMESTAMP},
      location = #{record.location,jdbcType=VARCHAR},
      created = #{record.created,jdbcType=TIMESTAMP}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="cn.com.gps169.db.model.Refuel">
    update gps_refuel
    <set>
      <if test="vehicleId != null">
        vehicle_id = #{vehicleId,jdbcType=INTEGER},
      </if>
      <if test="refuelAmount != null">
        refuel_amount = #{refuelAmount,jdbcType=DECIMAL},
      </if>
      <if test="fuelAmount != null">
        fuel_amount = #{fuelAmount,jdbcType=DECIMAL},
      </if>
      <if test="mileage != null">
        mileage = #{mileage,jdbcType=DECIMAL},
      </if>
      <if test="refuelDate != null">
        refuel_date = #{refuelDate,jdbcType=TIMESTAMP},
      </if>
      <if test="location != null">
        location = #{location,jdbcType=VARCHAR},
      </if>
      <if test="created != null">
        created = #{created,jdbcType=TIMESTAMP},
      </if>
    </set>
    where refuel_id = #{refuelId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="cn.com.gps169.db.model.Refuel">
    update gps_refuel
    set vehicle_id = #{vehicleId,jdbcType=INTEGER},
      refuel_amount = #{refuelAmount,jdbcType=DECIMAL},
      fuel_amount = #{fuelAmount,jdbcType=DECIMAL},
      mileage = #{mileage,jdbcType=DECIMAL},
      refuel_date = #{refuelDate,jdbcType=TIMESTAMP},
      location = #{location,jdbcType=VARCHAR},
      created = #{created,jdbcType=TIMESTAMP}
    where refuel_id = #{refuelId,jdbcType=INTEGER}
  </update>
</mapper>